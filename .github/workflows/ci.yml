name: Continuous Integration

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  EXTNAME: WikiMirror
  MW_INSTALL_PATH: ${{ github.workspace }}

jobs:
  build:
    name: Main Test Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        php: [ '7.4' ]
        mediawiki: [ REL1_35, master ]
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, intl
          coverage: none
      - name: Setup MediaWiki
        uses: actions/checkout@v2
        with:
          repository: wikimedia/mediawiki
          ref: ${{ matrix.mediawiki }}
      - name: Setup VisualEditor
        uses: actions/checkout@v2
        with:
          repository: wikimedia/mediawiki-extensions-VisualEditor
          ref: ${{ matrix.mediawiki }}
          path: extensions/VisualEditor
          submodules: true
      - name: Setup Extension
        uses: actions/checkout@v2
        with:
          path: extensions/${{ env.EXTNAME }}
      - name: Setup Composer
        run: |
          echo '{"extra":{"merge-plugin":{"include":["extensions/*/composer.json","skins/*/composer.json"]}}}' > composer.local.json
          composer update
          composer update
      - name: Install MediaWiki
        run: |
          php maintenance/install.php --dbtype sqlite --dbuser root --dbname mw --with-extensions --pass AdminPassword WikiName AdminUser
          echo 'require_once "$IP/includes/DevelopmentSettings.php";' >> LocalSettings.php
      - name: Create Artifact
        run: tar -cvf ${{ runner.temp }}/wiki.tar .
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.EXTNAME }}-${{ matrix.os }}-${{ matrix.php }}-${{ matrix.mediawiki }}-${{ github.sha }}
          path: ${{ runner.temp }}/wiki.tar
          retention-days: 1

  style:
    name: Code Style
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        php: [ '7.4' ]
        mediawiki: [ REL1_35, master ]
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, intl
          coverage: none
          tools: composer, phpcs, phplint
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.EXTNAME }}-${{ matrix.os }}-${{ matrix.php }}-${{ matrix.mediawiki }}-${{ github.sha }}
      - name: Extract Artifact
        run: tar -xvf wiki.tar
      - name: Lint
        run: phplint -w extensions/${{ env.EXTNAME }}
      - name: PHP Code Sniffer
        run: phpcs -sp --standard=vendor/mediawiki/mediawiki-codesniffer/MediaWiki extensions/${{ env.EXTNAME }}

  security:
    name: Static Analysis
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        php: [ '7.4' ]
        mediawiki: [ master ]
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, intl, ast
          ini-values: auto_prepend_file=${{ env.MW_INSTALL_PATH }}/vendor/autoload.php
          coverage: none
          tools: composer, phan
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.EXTNAME }}-${{ matrix.os }}-${{ matrix.php }}-${{ matrix.mediawiki }}-${{ github.sha }}
      - name: Extract Artifact
        run: tar -xvf wiki.tar
      - name: Phan
        run: phan -d extensions/${{ env.EXTNAME }} --minimum-target-php-version=7.3 -k ${{ env.MW_INSTALL_PATH }}/vendor/mediawiki/mediawiki-phan-config/src/config.php --long-progress-bar

  cleanup:
    name: Cleanup
    if: always()
    needs: [ style, security ]
    runs-on: ubuntu-latest
    steps:
      - name: Execute Webhook
        env:
          WEBHOOK_TOKEN: ${{ secrets.WEBHOOK_TOKEN }}
        run: |
          echo "::add-mask::$WEBHOOK_TOKEN"
          curl -fsV -X POST "https://api.github.com/repos/$GITHUB_REPOSITORY/dispatches" --header "Authorization: token $WEBHOOK_TOKEN" --header 'Content-Type: application/json' --header 'Accept: application/vnd.github.everest-preview+json' --data-raw "{ \"event_type\": \"delete_all_artifacts\", \"client_payload\": {\"parent_runid\": \"$GITHUB_RUN_ID\", \"parent_repo\": \"$GITHUB_REPOSITORY\"} }"
